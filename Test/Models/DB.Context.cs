//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestEntities : DbContext
    {
        public TestEntities()
            : base("name=TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventDetail> EventDetails { get; set; }
        public virtual DbSet<EventDetailStatu> EventDetailStatus { get; set; }
        public virtual DbSet<Tournament> Tournaments { get; set; }
    
        public virtual ObjectResult<spGetEventDetailsByStatusAndName_Result> spGetEventDetailsByStatusAndName(Nullable<short> fK_EventDetailStatusID, string eventDetailName)
        {
            var fK_EventDetailStatusIDParameter = fK_EventDetailStatusID.HasValue ?
                new ObjectParameter("FK_EventDetailStatusID", fK_EventDetailStatusID) :
                new ObjectParameter("FK_EventDetailStatusID", typeof(short));
    
            var eventDetailNameParameter = eventDetailName != null ?
                new ObjectParameter("EventDetailName", eventDetailName) :
                new ObjectParameter("EventDetailName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetEventDetailsByStatusAndName_Result>("spGetEventDetailsByStatusAndName", fK_EventDetailStatusIDParameter, eventDetailNameParameter);
        }
    
        public virtual ObjectResult<string> spGetTournamentNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetTournamentNames");
        }
    }
}
